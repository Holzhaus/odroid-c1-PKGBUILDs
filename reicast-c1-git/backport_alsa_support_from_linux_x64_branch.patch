diff --git a/core/linux-dist/main.cpp b/core/linux-dist/main.cpp
index f4c803b..9f2304b 100755
--- a/core/linux-dist/main.cpp
+++ b/core/linux-dist/main.cpp
@@ -815,6 +815,9 @@ int main(int argc, wchar* argv[])
 	signal(SIGKILL, clean_exit);
 	
 	init_sound();
+#else
+	void os_InitAudio();
+	os_InitAudio();
 #endif
 
 #if defined(USES_HOMEDIR)
@@ -850,12 +853,20 @@ int main(int argc, wchar* argv[])
 	return 0;
 }
 
+u32 alsa_Push(void* frame, u32 samples, bool wait);
 u32 os_Push(void* frame, u32 samples, bool wait)
 {
-#if defined TARGET_PANDORA || defined USE_OSS
-	write(audio_fd, frame, samples*4);
-#endif
-return 1;
+	#if !defined(TARGET_PANDORA) || !defined(USE_OSS)
+		int audio_fd = -1;
+	#endif
+
+	if (audio_fd > 0) {
+		write(audio_fd, frame, samples*4);
+	} else {
+		return alsa_Push(frame, samples, wait);
+	}
+
+	return 1;
 }
 #endif
 
diff --git a/core/oslib/alsa_audiostream.cpp b/core/oslib/alsa_audiostream.cpp
index 055fe77..db1f186 100644
--- a/core/oslib/alsa_audiostream.cpp
+++ b/core/oslib/alsa_audiostream.cpp
@@ -4,14 +4,38 @@
 
 #include "cfg/cfg.h"
 
-#if 0 && HOST_OS==OS_LINUX && !defined(TARGET_NACL32)
+#if HOST_OS==OS_LINUX && !defined(TARGET_NACL32) && !defined(ANDROID)
 
-#if !defined(ANDROID)
+#if 1
 #include <alsa/asoundlib.h>
 #include <pthread.h>
 
 snd_pcm_t *handle;
 
+u32 alsa_Push(void* frame, u32 samples, bool wait) {
+	
+	snd_pcm_nonblock(handle, wait ? 0 : 1);
+
+	int rc = snd_pcm_writei(handle, frame, samples);
+	if (rc == -EPIPE)
+	{
+		/* EPIPE means underrun */
+		fprintf(stderr, "ALSA: underrun occurred\n");
+		snd_pcm_prepare(handle);
+		alsa_Push(frame, samples * 8, wait);
+	}
+	else if (rc < 0)
+	{
+		fprintf(stderr, "ALSA: error from writei: %s\n", snd_strerror(rc));
+	}
+	else if (rc != samples)
+	{
+		fprintf(stderr, "ALSA: short write, wrote %d frames of %d\n", rc, samples);
+	}
+	return 1;
+}
+#if 0
+
 u8 Tempbuffer[8192*4];
 void* AudioThread(void*)
 {
@@ -44,6 +68,7 @@ void* AudioThread(void*)
 }
 
 cThread aud_thread(AudioThread,0);
+#endif
 
 void os_InitAudio()
 {
@@ -123,7 +148,7 @@ void os_InitAudio()
 	}
 
 	/* Set period size to settings.aica.BufferSize frames. */
-	frames = settings.aica.BufferSize;
+	frames = 2 * 1024;//frames = settings.aica.BufferSize;
 	rc=snd_pcm_hw_params_set_period_size_near(handle, params, &frames, &dir);
 	if (rc < 0)
 	{
@@ -146,7 +171,7 @@ void os_InitAudio()
 		return;
 	}
 
-	aud_thread.Start();
+	//aud_thread.Start();
 }
 
 void os_TermAudio()
